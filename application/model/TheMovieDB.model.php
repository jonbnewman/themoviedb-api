<?phpclass TheMovieDB {  public function getConfig() {    global $redis;    $apiURL = "http://api.themoviedb.org/3/configuration";    if( ( $response = $redis->get( $apiURL ) ) == false ) {      $params = array(        'api_key' => API_KEY      );      $curl = curl_init();      curl_setopt( $curl, CURLOPT_URL, $apiURL."?".http_build_query( $params ) );      curl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1 );      curl_setopt( $curl, CURLOPT_USERAGENT, 'alertlogic.dev-test.tmdb-interface');      if( ( $response = curl_exec( $curl ) ) === false ) {        $response = json_encode( array( 'error' =>  curl_error( $curl ) ) );      }      curl_close( $curl );      $redis->set( $apiURL, $response );      $redis->expire( $apiURL, (86400 * 10) ); // data considered to be relatively non-valatile, expire in 10 days    }    return json_decode( $response );  }  /**   * Get the list of people for a certain name query   * @param string $query Name of actor   * @param int $page Page of movie list desired   */  public function getPersonList( $query, $page = 1 ) {    global $redis;        if( (!is_numeric( $page ) || $page > 20) ) {      // invalid input (malformed or out of bounds)      return array( 'error' => 'Invalid page request' );    }    $apiURL = "http://api.themoviedb.org/3/search/person";    if( ( $response = $redis->get( $apiURL ) ) == false ) {      $params = array(        'api_key' => API_KEY,        'query' =>  $query      );      $curl = curl_init();      curl_setopt( $curl, CURLOPT_URL, $apiURL."?".http_build_query( $params ) );      curl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1 );      curl_setopt( $curl, CURLOPT_USERAGENT, 'alertlogic.dev-test.tmdb-interface');      if( ( $response = curl_exec( $curl ) ) === false ) {        $response = json_encode( array( 'error' =>  curl_error( $curl ) ) );      }      curl_close( $curl );      $redis->set( $apiURL, $response );      $redis->expire( $apiURL, (86400 * 3) ); // data considered to be relatively non-valatile, expire in 3 days    }    return json_decode( $response );  }  /**   * Get the list of movies for a certain person $id   * @param int $id ID of actor/actress   */  public function getMovieList( $id ) {    global $redis;    $apiURL = "http://api.themoviedb.org/3/person/${id}/credits";    if( ( $response = $redis->get( $apiURL ) ) == false ) {      $params = array(        'api_key' => API_KEY      );      $curl = curl_init();      curl_setopt( $curl, CURLOPT_URL, $apiURL."?".http_build_query( $params ) );      curl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1 );      curl_setopt( $curl, CURLOPT_USERAGENT, 'alertlogic.dev-test.tmdb-interface');      if( ( $response = curl_exec( $curl ) ) === false ) {        $response = json_encode( array( 'error' =>  curl_error( $curl ) ) );      }      curl_close( $curl );      $redis->set( $apiURL, $response );      $redis->expire( $apiURL, (86400 * 3) ); // data considered to be relatively non-valatile, expire in 3 days    }    $response = json_decode( $response, true );    $movies = array();    foreach( $response['cast'] as $movie ) {      $movies[ $movie['release_date'] ] = $movie;    }    ksort( $movies );    return $movies;  }}?>